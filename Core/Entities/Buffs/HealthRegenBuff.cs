using UnityEngine;

namespace SuspiciousGames.Saligia.Core.Entities.Buffs
{
    public class HealthRegenBuff : Buff
    {
        private HealthRegenBuffData _data;
        private int _lifeToHeal;
        private float _accumulatedHeal;
        private int _healthRegenerated;

        public HealthRegenBuff(BuffData buff, Entity buffTarget, Entity buffSource) : base(buff, buffTarget, buffSource)
        {
            _data = (HealthRegenBuffData)BuffData;
        }

        protected override void ApplyEffect()
        {
            _lifeToHeal = (int)Mathf.Ceil(buffTarget.HealthComponent.MaxHitPoints * _data.PercentualHealthRegenerationValue);
            _accumulatedHeal = 0.0f;
            _healthRegenerated = 0;
        }

        public override void Tick(float delta)
        {
            base.Tick(delta);

            if (buffTarget.HealthComponent.IsFullLife)
            {
                buffTarget.BuffComponent.RemoveBuff(BuffData);
                return;
            }

            _accumulatedHeal += delta * _lifeToHeal / BuffData.Duration;

            if (_accumulatedHeal >= 1.0f)
            {
                buffTarget.HealthComponent.ApplyHealing((int)_accumulatedHeal);
                _healthRegenerated = (int)_accumulatedHeal;
            }
            _accumulatedHeal -= (int)_accumulatedHeal;
        }

        protected override void UndoEffect()
        {
            Debug.Log("Health regenerated by: " + _healthRegenerated);
        }
    }
}
